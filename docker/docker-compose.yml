version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: finance-tracker-db
    restart: always
    environment:
      POSTGRES_PASSWORD: iNNAsn-764dge-qWEr-z
      POSTGRES_USER: postgres
      POSTGRES_DB: personal_finance
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finance-network

  # Telegram Bot Application
  telegram-bot:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: finance-tracker-bot
    command: node bot/telegram-bot-implementation.js
    restart: always
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      BOT_TOKEN: 7568656546:AAEC4QBbnZVrRHEbmMVpfwe-dtKXLlCDroc
      NODE_ENV: production
      GOOGLE_APPLICATION_CREDENTIALS: /app/credentials/google-credentials.json
      GOOGLE_PROJECT_ID: ${GOOGLE_PROJECT_ID}
    volumes:
      - ./credentials:/app/credentials
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - finance-network

  # n8n Workflow Engine
  n8n:
    image: n8nio/n8n:latest
    container_name: finance-tracker-n8n
    restart: always
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${DB_NAME}
      - DB_POSTGRESDB_USER=${DB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - NODE_ENV=production
    ports:
      - "5678:5678"
    volumes:
      - n8n-data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - finance-network

  # PGAdmin for database management (optional, can be removed in production)
  pgadmin:
    image: dpage/pgadmin4
    container_name: finance-tracker-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - finance-network

  # Backup Service
  backup:
    image: postgres:14-alpine
    container_name: finance-tracker-backup
    restart: always
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./backup-scripts:/scripts
    entrypoint: /scripts/backup.sh
    depends_on:
      - postgres
    networks:
      - finance-network

volumes:
  postgres-data:
  n8n-data:
  pgadmin-data:

networks:
  finance-network:
    driver: bridge
