name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finance_tracker_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        echo "Cleaning npm cache..."
        npm cache clean --force
        
        echo "Removing existing node_modules and package-lock.json..."
        rm -rf node_modules package-lock.json
        
        echo "Installing dependencies..."
        npm install --no-audit --no-fund --legacy-peer-deps
        
        echo "Verifying installation..."
        npm list --depth=0 || true
        
        echo "Checking for missing dependencies..."
        if [ ! -f "package-lock.json" ]; then
          echo "Error: package-lock.json was not generated"
          exit 1
        fi
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run tests
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: finance_tracker_test
        JWT_SECRET: test_secret
        REDIS_URL: redis://localhost:6379
      run: npm test
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/coverage-final.json
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        echo "Cleaning npm cache..."
        npm cache clean --force
        
        echo "Removing existing node_modules and package-lock.json..."
        rm -rf node_modules package-lock.json
        
        echo "Installing dependencies..."
        npm install --no-audit --no-fund --legacy-peer-deps
        
        echo "Verifying installation..."
        npm list --depth=0 || true
        
        echo "Checking for missing dependencies..."
        if [ ! -f "package-lock.json" ]; then
          echo "Error: package-lock.json was not generated"
          exit 1
        fi
    
    - name: Run security audit
      run: npm audit
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        echo "Cleaning npm cache..."
        npm cache clean --force
        
        echo "Removing existing node_modules and package-lock.json..."
        rm -rf node_modules package-lock.json
        
        echo "Installing dependencies..."
        npm install --no-audit --no-fund --legacy-peer-deps
        
        echo "Verifying installation..."
        npm list --depth=0 || true
        
        echo "Checking for missing dependencies..."
        if [ ! -f "package-lock.json" ]; then
          echo "Error: package-lock.json was not generated"
          exit 1
        fi
    
    - name: Run SonarQube analysis
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
      with:
        args: >
          -Dsonar.projectKey=fermeradar_personal-finance-tracker
          -Dsonar.organization=fermeradar
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.sources=src
          -Dsonar.tests=tests
          -Dsonar.test.inclusions=tests/**/*.test.js
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov-report/lcov.info
          -Dsonar.coverage.exclusions=tests/**/*,config/**/*,scripts/**/*
    
    - name: Run dependency check
      run: npm run check-deps
    
    - name: Run bundle size check
      run: npm run check-bundle-size 