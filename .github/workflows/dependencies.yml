name: Dependencies

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        echo "Cleaning npm cache..."
        npm cache clean --force
        
        echo "Removing existing node_modules and package-lock.json..."
        rm -rf node_modules package-lock.json
        
        echo "Installing dependencies..."
        npm install --no-audit --no-fund --legacy-peer-deps
        
        echo "Verifying installation..."
        npm list --depth=0 || true
        
        echo "Checking for missing dependencies..."
        if [ ! -f "package-lock.json" ]; then
          echo "Error: package-lock.json was not generated"
          exit 1
        fi

    - name: Check for outdated dependencies
      run: npm outdated

    - name: Update dependencies
      run: |
        npm update
        npm audit fix

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        commit-message: 'chore: update dependencies'
        title: 'chore: update dependencies'
        body: |
          Automated dependency update.
          
          This PR updates the project dependencies to their latest versions.
          
          Please review the changes and ensure they don't break any functionality.
          
          ### Changes
          - Updated npm packages to their latest versions
          - Fixed security vulnerabilities
          
          ### Testing
          - [ ] Run tests locally
          - [ ] Check for breaking changes
          - [ ] Verify security fixes

    - name: Run tests on PR
      if: github.event_name == 'pull_request'
      env:
        NODE_ENV: test
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
      run: npm test 